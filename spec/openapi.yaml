openapi: 3.0.3
info:
  title: Wide Angle Analytics
  description: |-
    Wide Angle Analytics Public Events API
  termsOfService: https://wideangle.co/policy/terms
  contact:
    email: "developers@wideangle.co"
  version: 1.1.0
externalDocs:
  description: |-
    Find out more about Wide Angle Analytics
  url: https://wideangle.co/documentation
servers:
  - url: https://wideangle.co/public/api/v1
tags:
  - name: events
    description: Web Events API
paths:
  /events/site/{site}:
    post:
      tags:
        - events
      summary: Record Events
      description: |-
        Record events captured on the client side. Alternatively, generate custom events based on arbitrary action.
      operationId: captureEvents
      parameters:
        - name: site
          in: path
          description: Site ID
          required: true
          schema:
            type: string
            example: A26EG3B9ACA8DF4243
      requestBody:
        description: Capture an event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '204':
          description: |-
            Successful operation
        '400':
          description: |-
            Invalid request. Your request does not match the schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '401':
          description: |-
            Unauthorized. Invalid API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '403':
          description: |-
            Forbidden. Site settings do not permit given event type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '404':
          description: |-
            Not Found. Make sure to use recognized event type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        '500':
          description: |-
            Fatal Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
      security:
        - ApiKeyHeader: []
components:
  schemas:
    Event:
      type: object
      required:
        - origin
        - url
        - timestamp
      properties:
        customerId:
          type: string
          example: "john@example.com"
        trackingId:
          type: string
        eventType:
          required: true
          $ref: '#/components/schemas/EventType'
        origin:
          type: string
          format: url
          example: "https://example.com"
        referrer:
          type: string
        url:
          type: string
          format: url
          example: "https://example.com/blog/post"
        remote:
          anyOf:
            - $ref: '#/components/schemas/RemoteIp'
            - $ref: '#/components/schemas/RemoteLocation'
        timestamp:
          type: string
          format: date-time
          example: '2022-10-23 14:52:41.031'
          description: "Time of the event, assumed to be in UTC."
        tzOffset:
          type: number
          format: int32
          example: -60
          description: "Client timezone offset."
          default: 0
        viewPort:
          $ref: '#/components/schemas/ViewPort'
        parameters:
          $ref: '#/components/schemas/Parameter'
        values:
          $ref: '#/components/schemas/Value'
        userAgent:
          anyOf:
          - $ref: '#/components/schemas/ParsedUserAgent'
          - $ref: '#/components/schemas/RawUserAgent'
    RemoteIp:
      type: object
      required:
        - ip
      properties:
        ip:
          type: string
          format: "IPv4"
          example: "181.31.32.12"
    RemoteLocation:
      type: object
      required:
        - country
        - region
        - id
      properties:
        id:
          type: string
          format: "UUID"
          description: "Unique identifier of the location. Two different locations must not share the same ID"
          example: "5f094940-77d4-11ed-88fb-17eeac7ec1c1"
        country:
          type: string
          description: Country ISO code [ISO 3166-1]
          example: "DE"
        region:
          type: string
          description: Region ISO code [ISO 3166-2]
          example: "BE"
    RawUserAgent:
      type: string
      example: |-
        User-Agent: Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.0.0 Mobile Safari/537.36
    ParsedUserAgent:
      type: object
      properties:
        base:
          type: string
          example: 'Firefox;v=96'
        platform:
          type: string
          example: Windows
        mobile:
          type: string
          enum:
            - '?0'
            - '?1'
          example: '?0'
    ViewPort:
      type: object
      required:
        - width
        - height
      properties:
        width:
          type: integer
          example: 1920
        height:
          type: integer
          example: 1080
    EventType:
      type: string
      enum:
        - pageview
        - pageleave
        - click
        - download
        - action
        - values
    Parameter:
      type: object
      additionalProperties:
        type: string
      example:
            utm_campaign: ads-nov-2022
            utm_source: twitter
            utm_media: social
            utm_content: https://twitter.com/FromWideAngle/status/1592893022001242117
            name: trial-intent
    Value:
      type: object
      additionalProperties:
        type: double
      example:
            item1: 10.02
            item2: 33.12
            total: 43.14
            attempt: 3
    ApiErrorResponse:
      type: object
      properties:
        message:
          type: string
  requestBodies:
    Event:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Event'
  securitySchemes:
    ApiKeyHeader:
      type: apiKey
      in: header
      name: Authorization
